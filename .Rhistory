plot(pcaCereb$x, col = idCereb , pch= 19)
pcaCereball <- prcomp(CerebTCPA)
pcaCereball <- prcomp(cerebTCPA)
pcaCereball <- prcomp(cerebTCPA[,5:221])
head(cerebTCPA)
pcaCereball <- prcomp(cerebTCPA[,1:220])
dim(cerebTCPA)
pcaCereball <- prcomp(cerebTCPA[,1:217])
plot(pcaCereball$x, col = idCereb , pch= 19)
par(mfrow= c(1,2))
plot(pcaCereb$x, col = idCereb , pch= 19)
plot(pcaCereball$x, col = idCereb , pch= 19)
par(mfrow= c(1,4))
plot(pcaCereb$x[,1],pcaCereb$x[,2], col = idCereb , pch= 19)
par(mfrow= c(2,2))
plot(pcaCereb$x[,1],pcaCereb$x[,2], col = idCereb , pch= 19)
plot(pcaCereb$x[,2],pcaCereb$x[,3], col = idCereb , pch= 19)
plot(pcaCereball$x[,1],pcaCereball$x[,2], col = idCereb , pch= 19)
plot(pcaCereball$x[,2],pcaCereball$x[,3], col = idCereb , pch= 19)
egocerebBP
xCereb
mCereb
idCereb
cerebTCPA[,"type"]
colnames(mCereb) <- c("LGG", "GBM")
mCereb
heatmap(cerebTCPA[,bmaCereb$Fsim>0.9]))
heatmap(cerebTCPA[,bmaCereb$Fsim>0.9])
heatmap(cerebTCPA[,bmaCereb$Fsim>0.9][,1:217])
cerebTCPA[,bmaCereb$Fsim>0.9]
heatmap(cerebTCPA[,bmaCereb$Fsim>0.9])
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]))
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), col = mycol)
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), col = mycol, RowSideColors = as.character(idCereb))
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), col = palette(4), RowSideColors = as.character(idCereb))
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), col = palette("default"), RowSideColors = as.character(idCereb))
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), col = palette(c("red", "green")), RowSideColors = as.character(idCereb))
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), col = palette(c("red", "green")), RowSideColors = as.character(idCereb))
palette("default")
palette("default")
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), RowSideColors = as.character(idCereb))
heatmap(as.matrix(cerebTCPA[,bmaCereb$Fsim>0.9]), RowSideColors = as.character(idCereb), col = mycol)
colMeans(cerebTCPA[,-218])
head(TCPA)
dim(cerebTCPA)
cerebTCPA <- rbind(TCPA[TCPA[,2]=="LGG",],TCPA[TCPA[,2]=="GBM",])
cerebTCPA <- as.data.frame(cerebTCPA)
cerebTCPA$type <- c(TCPA[TCPA[,2]=="LGG",2],TCPA[TCPA[,2]=="GBM",2])
head(cerebTCPA)
dfTCPA <- CerebTCPA[,colSums(is.na(TCPA))==0]
dfTCPA <- cerebTCPA[,colSums(is.na(TCPA))==0]
dfcerebTCPA <- cerebTCPA[,colSums(is.na(TCPA))==0]
head(dfcerebTCPA)
dim(dfcerebTCPA)
dfcerebTCPA[1:5,1:5]
dfcerebTCPA <- cerebTCPA[,colSums(is.na(TCPA))==0][,5:221]
cerebTCPAnorm <- apply(dfcerebTCPA, 2, function(x) x - mean(x))
cerebTCPAnorm <- apply(cerebTCPAnorm, 2, function(x) x/sd(x))
colMeans(cerebTCPAnorm)
apply(cerebTCPAnorm,2 var(x))
apply(cerebTCPAnorm,2 var())
apply(cerebTCPAnorm,2 var
apply(cerebTCPAnorm,2 var)
apply(cerebTCPAnorm,2, var)
X <- cerebTCPAnorm [,-218]
N <- nrow(X)
varselect <- floor(ncol(cerebTCPAnorm [,-218])/10)
iter <- 10
numSelect <- ncol(cerebTCPAnorm[,-218])/5
S_0 <- rep(0.2, ncol(cerebTCPAnorm[,-218]))
intfeatures <- pSelect(as.matrix(cerebTCPAnorm[,-218]), iter, varselect, S_0 = S_0, a = 1, b = 1, numSelect, Model="ML", BPPARAM = bpparam())
ResultCereb <- sugsvarsel(as.matrix(cerebTCPAnorm[,-218]), 2, 50, intfeatures, numSelect, S_0 = S_0, a=1, b=1, Model="ML", BPPARAM = bpparam())
library(sugsvaRsel)
X <- cerebTCPAnorm [,-218]
N <- nrow(X)
varselect <- floor(ncol(cerebTCPAnorm [,-218])/10)
iter <- 10
numSelect <- ncol(cerebTCPAnorm[,-218])/5
S_0 <- rep(0.2, ncol(cerebTCPAnorm[,-218]))
intfeatures <- pSelect(as.matrix(cerebTCPAnorm[,-218]), iter, varselect, S_0 = S_0, a = 1, b = 1, numSelect, Model="ML", BPPARAM = bpparam())
ResultCereb <- sugsvarsel(as.matrix(cerebTCPAnorm[,-218]), 2, 50, intfeatures, numSelect, S_0 = S_0, a=1, b=1, Model="ML", BPPARAM = bpparam())
mlnormCereb <- occamsWindow(ResultCereb$ML, 100)
bmaCereb <- bma(cerebTCPA[,-218], mlnormCereb, ResultCereb)
mycol <- colorRampPalette(c("darkblue","white"))(100)
barplot(t(bmaCereb$Fsim))
mpCereb <- maxpear(bmaCereb$Asim)
cerebTCPA
mlnormCereb <- occamsWindow(ResultCereb$ML, 100)
bmaCereb <- bma(cerebTCPAnorm[,-218], mlnormCereb, ResultCereb)
mycol <- colorRampPalette(c("darkblue","white"))(100)
barplot(t(bmaCereb$Fsim))
mpCereb <- maxpear(bmaCereb$Asim)
library("mcclust")
mpCereb <- maxpear(bmaCereb$Asim)
idCereb <- as.character(1*(cerebTCPA[, "type"]=="LGG")+1)
par(mfrow = c(1,1))
heatmap(bmaCereb$Asim, col = mycol, scale = "none", ColSideColors = as.character(mpCereb$cl), RowSideColors = idCereb)
table(mpCereb$cl)
table(mpCereb$cl)
table(mpCereb$cl)>20
sum(table(mpCereb$cl)>20)
mCereb <- matrix(0,4,2)
for(i in 1:4){
for(j in 1:2){
mCereb[i, j] <- sum(idCereb[mpCereb$cl==as.numeric(names(table(mpCereb$cl)[table(mpCereb$cl)>20])[i])]==j)
}
}
mCereb
fisher.test(mCereb, hybrid = T)
colnames(mCereb) <- c("LGG", "GBM")
mpCereb$cl
table(mpCereb$cl)
pcacereb <- prcomp(cerebTCPAnorm[,-218])
plot(pcacereb$x, col = idCereb)
plot(pcacereb$x, col = idCereb, pch = 15)
plot(pcacereb$x, col = idCereb, pch = 19)
plot(pcacereb$x, col = idCereb, pch = mpCereb$cl)
mCereb
xCereb <- colnames(TCPA)[bmaCereb$Fsim>0.9]
xCereb
heatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9])
heatmap2(cerebTCPAnorm[,bmaCereb$Fsim>0.9])
library(heatmap2)
library(gplots)
heatmap.2(cerebTCPAnorm[,bmaCereb$Fsim>0.9])
heatmap.(cerebTCPAnorm[,bmaCereb$Fsim>0.9], col = mycol)
heatmap.2(cerebTCPAnorm[,bmaCereb$Fsim>0.9], col = mycol)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9])
library(pheatmap)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9])
?pheatmap
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9], annotation_col = mpCereb)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9], annotation_row = mpCereb)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9], annotation_row = mpCereb$cl)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9], annotation_col = mpCereb$cl)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9], annotation_row = mpCereb$cl)
pheatmap(cerebTCPAnorm[,bmaCereb$Fsim>0.9], annotation_row = mpCereb$cl)
xCereb <- colnames(TCPA)[bmaCereb$Fsim>0.9]
xCereb
mCereb
rownames(TCPA)
TCPA[,1]
ResultsCereb <- list(ResultCereb, mpCereb, mCereb, bmaCereb)
save(ResultsCereb, file = "cerebTCPA.rda")
xCereb
setwd("C:/Users/OllyC/Desktop/TCGAdata")
setwd("C:/Users/OllyC/Desktop/TCGAdata/BGM")
setwd("C:/Users/OllyC/Desktop/TCGAdata")
setwd("C:/Users/OllyC/Desktop/TCGAdata/BGM")
?setwd
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
files <- list.files()
clinBGM <- matrix(0, length(files), 6)
colnames(clinGBM) <- list("id", "tissue","gender","days_to_death", "days_to_last_known_alive", "status")
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/KIRC")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
clinBGM <- matrix(0, length(files), 6)
colnames(clinGBM) <- list("id", "tissue","gender","days_to_death", "days_to_last_known_alive", "status")
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
clinGBM <- matrix(0, length(files), 6)
colnames(clinGBM) <- list("id", "tissue","gender","days_to_death", "days_to_last_known_alive", "status")
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
library(XML)
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
clinGBM["status"] <- 0
clinGBM <- as.data.frame(clinGBM)
clinGBM$status[!is.na(clinGBM$days_to_last_known_alive)] <- 1
clinGBM$status[!is.na(clinGBM$days_to_death)] <- 2
time <- matrix(0, dim(clinGBM)[2], 1)
clinGBM
dim(clinGBM)
clinGBM <- matrix(0, length(files), 6)
colnames(clinGBM) <- list("id", "tissue","gender","days_to_death", "days_to_last_known_alive", "status")
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
head(clinGBM)
clinGBM["status"] <- 0
clinGBM <- as.data.frame(clinGBM)
clinGBM$status[!is.na(clinGBM$days_to_last_known_alive)] <- 1
clinGBM
for(i in 1:length(files)){
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
setwd(files[i])
temp <- list.files()
fileloc <- grep("nationwidechildrens", temp)
clinGBM[i,] <- strsplit(temp[fileloc], '[.]')[[1]][[3]]
data <- xmlParse(temp[fileloc])
xml_data <- xmlToList(data)
clinGBM[i,"tissue"] <- xml_data$patient$tumor_tissue_site$text
clinGBM[i, "gender"] <- xml_data$patient$gender$text
if(length(xml_data$patient$vital_status) == 2)
if(xml_data$patient$vital_status$text == "Alive"){
clinGBM[i, "days_to_death"] <- NA
} else{
clinGBM[i, "days_to_death"] <- xml_data$patient$days_to_death$text
}
else{
clinGBM[i, "days_to_death"] <- NA
}
if(length(xml_data$patient$days_to_last_known_alive) == 2){
clinGBM[i,"days_to_last_known_alive"] <- xml_data$patient$days_to_last_known_alive$text
} else{
clinGBM[i, "days_to_last_known_alive"] <- NA
}
}
clinGBM["status"] <- 0
clinGBM <- as.data.frame(clinGBM)
!is.na(clinGBM$days_to_last_known_alive)]
!is.na(clinGBM$days_to_last_known_alive)
clinGBM$status
length(clinGBM$status)
sum(!is.na(clinGBM$days_to_last_known_alive))
!is.na(clinGBM$days_to_death)]
!is.na(clinGBM$days_to_death)
clinGBM$status[!is.na(clinGBM$days_to_death)] <- 2
time <- matrix(0, dim(clinGBM)[2], 1)
time[clinGBM$status == 1] <- clinGBM$days_to_last_known_alive[clinGBM$status == 1]
time[clinGBM$status == 2] <- clinGBM$days_to_death[clinGBM$status == 2]
time[clinGBM$status == 0] <- NA
time
clinGBM$time <- time
clinGBM$SurvObj <- with(clinGBM, Surv(time = time, status))
clinGBM$SurvObj <- with(clinGBM, Surv(time = time, status))
library(survival)
clinGBM$SurvObj <- with(clinGBM, Surv(time = time, status))
time
clinGBM$time
clinGBM$SurvObj <- with(clinGBM, Surv(time = as.numeric(time), status==2))
GBMSurv <- survfit(clinGBM$SurvObj ~ gender, data = clinGBM, conf.type = "log-log")
clinGBM$SurvObj
clinGBM
GBMSurv <- survfit(clinGBM$SurvObj ~ gender, data = clinGBM, conf.type = "log-log")
plot(GBMSurv, col = as.numeric(clinKirc$gender), xlab = "Time (days)")
GBMSurv <- survfit(clinGBM$SurvObj ~ 1, data = clinGBM, conf.type = "log-log")
clinGBM$SurvObj
GBMSurv <- survfit(clinGBM$SurvObj ~ gender, data = clinGBM, conf.type = "log-log")
clinGBM
clinGBM
GBMSurv <- survfit(as.numeric(clinGBM$SurvObj) ~ gender, data = clinGBM, conf.type = "log-log")
clinGBM$SurvObj
clinGBM$SurvObj ~ gender
is.recursive(clinGBM)
GBMSurv <- survfit(clinGBM[,"SurvObj"] ~ gender, data = clinGBM, conf.type = "log-log")
linGBM[,"SurvObj"]
clinGBM[,"SurvObj"]
GBMSurv <- survfit(clinGBM[,"SurvObj"] ~ 1, data = clinGBM, conf.type = "log-log")
clinGBM[,"SurvObj"]
library(survival)
install.packages("survival")
install.packages("survival")
library(survival)
clinGBM$SurvObj <- with(clinGBM, Surv(time = as.numeric(time), status==2))
GBMSurv <- survfit(clinGBM[,"SurvObj"] ~ 1, data = clinGBM, conf.type = "log-log")
GBMSurv <- survfit(clinGBM$SurvObj ~ 1, data = clinGBM, conf.type = "log-log")
GBMSurv <- survfit(cSurvObj ~ 1, data = clinGBM, conf.type = "log-log")
GBMSurv <- survfit(SurvObj ~ 1, data = clinGBM, conf.type = "log-log")
survdiff(clinGBM$SurvObj ~ gender, data = clinGBM)
plot(GBMSurv, col = as.numeric(clinKirc$gender), xlab = "Time (days)")
plot(GBMSurv, col = as.numeric(clinGBM$gender), xlab = "Time (days)")
plot(GBMSurv, col = as.numeric(clinGBM$gender), xlab = "Time (days)")
GBMSurv <- survfit(SurvObj ~ gender, data = clinGBM, conf.type = "log-log")
plot(GBMSurv, col = as.numeric(clinGBM$gender), xlab = "Time (days)")
GBMSurv
as.numeric(clinGBM$gender)
clinGBM$gender
plot(GBMSurv, xlab = "Time (days)")
survdiff(clinGBM$SurvObj ~ gender, data = clinGBM)
survdiff(SurvObj ~ gender, data = clinGBM)
is.na(clinGBM$gender)
clinGBM$gender[!is.na(clinGBM$gender)]
plot(GBMSurv, col = clinGBM$gender[!is.na(clinGBM$gender)], xlab = "Time (days)")
plot(GBMSurv, col = as.numeric(clinGBM$gender[!is.na(clinGBM$gender)]), xlab = "Time (days)")
as.numeric(clinGBM$gender[!is.na(clinGBM$gender)])
plot(GBMSurv, xlab = "Time (days)")
setwd("C:/Users/OllyC/Desktop/TCGAdata/GBM")
save(clinGBM, file = "clinGBM.rda")
head(Cereb)
head(cerebTCPAnorm)
rownames(cerebTCPAnorm)
TCPA[,2]
TCPA[,1]
cerebTCPA
cerebTCPA[,2]
cerebTCPA[,1]
strsplit(cerebTCPA[1,1], '[-]')
strsplit(cerebTCPA[1,1], '[-]')[[1]]
strsplit(cerebTCPA[1,1], '[-]')[[1]][1:3]
paste(strsplit(cerebTCPA[1,1], '[-]')[[1]][1:3], "-")
paste(strsplit(cerebTCPA[1,1], '[-]')[[1]][1:3], -)
paste(strsplit(cerebTCPA[1,1], '[-]')[[1]][1:3], sep = -)
paste(strsplit(cerebTCPA[1,1], '[-]')[[1]][1:3], sep = "-")
paste(strsplit(cerebTCPA[1,1], '[-]')[[1]][1:3], collapse = "-")
rCereb <- matrix(0,dim(cerebTCPA)[1])
for(i in 1:dim(cerebTCPA)[1]){
rCereb[i]<- paste(strsplit(cerebTCPA[i,1], '[-]')[[1]][1:3], collapse = "-")
}
rCereb
rownames(cerebTCPAnorm) <- rCereb
clinBGM
clinGBM
clinGBM[rownames(cerebTCPAnorm),]
clinGBM[rownames(cerebTCPAnorm)[1],]
rownames(cerebTCPAnorm)
clinGBM["TCGA-19-4065",]
clinGBM[1,]
clinGBM[,1]
rownames(clinGBM)
head(clinGBM)
clinGBM[,1]
clinGBM[1,]
clinGBM[1,1]
list.files()
dim(clinGBM)
head(clinGBM)
head(clinGBM)[,1]
head(clinGBM)[1,]
length(files)
clinGBM <- clinGBM[1:length(files),]
head(clinGBM)
clinGBM$SurvObj <- with(clinGBM, Surv(time = as.numeric(time), status==2))
GBMSurv <- survfit(SurvObj ~ gender, data = clinGBM, conf.type = "log-log")
survdiff(SurvObj ~ gender, data = clinGBM)
plot(GBMSurv, xlab = "Time (days)")
plot(GBMSurv, col = as.numeric(clinGBM$gender) xlab = "Time (days)")
plot(GBMSurv, col = as.numeric(clinGBM$gender), xlab = "Time (days)")
as.numeric(clinGBM$gender)
clinGBM$gender
as,character(clinGBM$gender)
as.character(clinGBM$gender)
as.numeric(as.character(clinGBM$gender))
plot(GBMSurv, col = clinGBM$gender, xlab = "Time (days)")
as.numeric((clinGBM$gender))
as.character(clinGBM$gender)
clinGBM$gender=="MALE"
1*(clinGBM$gender=="MALE")+1
plot(GBMSurv, col = 1*(clinGBM$gender=="MALE")+1 xlab = "Time (days)")
plot(GBMSurv, col = 1*(clinGBM$gender=="MALE")+1, xlab = "Time (days)")
legend("topright", c("MALE", "FEMALE"), col = c(2,1), lty = 1)
save(clinGBM, file = "clinGBM.rda")
head(cerebTCPAnorm)
cerebTCPAnorm[,1]
rownames(cerebTCPAnorm)
rownames(cerebTCPAnorm)[1]
clinGBM[rownames(cerebTCPAnorm)[1],]
rownames(cerebTCPAnorm)[1]%*%clinGBM[,1]
clinGBM[,1]
clinGBM[,1]=="rownames(cerebTCPAnorm)[1]"
rownames(cerebTCPAnorm)[1]==clinGBM[,1]
sum(rownames(cerebTCPAnorm)[1]==clinGBM[,1])
rownames(cerebTCPAnorm)[1]
clinGBM[,1]
rownames(cerebTCPAnorm)[1]
rownames(cerebTCPAnorm)
rownames(cerebTCPAnorm)[1]
rownames(cerebTCPAnorm)[2]
rownames(cerebTCPAnorm)[3]
rownames(cerebTCPAnorm)[100]
rownames(cerebTCPAnorm)[150]
rownames(cerebTCPAnorm)[200]
rownames(cerebTCPAnorm)[250]
rownames(cerebTCPAnorm)[300]
clinGBM[rownames(cerebTCPAnorm)[300],]
clinGBM[rownames(cerebTCPAnorm)[301],]
rownames(cerebTCPAnorm)[300] == clinGBM[,1]
sum(rownames(cerebTCPAnorm)[300] == clinGBM[,1])
sum(rownames(cerebTCPAnorm)[1] == clinGBM[,1])
sum(rownames(cerebTCPAnorm)[2] == clinGBM[,1])
sum(rownames(cerebTCPAnorm) == clinGBM[,1])
sum(rownames(cerebTCPAnorm)%in%clinGBM[,1])
